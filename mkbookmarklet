#!/usr/bin/env python
import subprocess as sp
import json
import sys
import os

if len(sys.argv) == 1:
    sys.argv.append("files/")

PREFIX = sys.argv[1]

SCRIPTS = [
    "popcorn-complete-1.3.min.js",
    "browsercast.js",
]

CSS = [
    "browsercast.css",
]

JS = """
    var prefix = %(PREFIX)s;
    %(CSS)s.forEach(function(css_url) {
        var s = document.createElement('link');
        s.setAttribute('rel', 'stylesheet');
        s.setAttribute('type', 'text/css');
        s.setAttribute('href', prefix + css_url + "?" + new Date());
        document.getElementsByTagName('body')[0].appendChild(s);
    });
    %(SCRIPTS)s.forEach(function(script_url) {
        var s = document.createElement('script');
        s.setAttribute('src', prefix + script_url + "?" + new Date());
        document.getElementsByTagName('body')[0].appendChild(s);
    });
""" %{
    "PREFIX": json.dumps(PREFIX),
    "SCRIPTS": json.dumps(SCRIPTS),
    "CSS": json.dumps(CSS),
}


COMPILE = [
    "closure", "--compilation_level", "ADVANCED_OPTIMIZATIONS"
]

if os.system("which closure > /dev/null"):
    sys.stderr.write("WARNING: closure compiler not found; "
                     "not compressing bookmarklet.\n")
    COMPILE = ["cat"]


compiler = sp.Popen(COMPILE, stdin=sp.PIPE, stdout=sp.PIPE)
compiled, _ = compiler.communicate(input=JS)
if compiler.returncode:
    sys.exit(compiler.returncode)
compiled = compiled.strip().strip(";")
print "javascript:void((function(){%s})())" %(compiled, )

